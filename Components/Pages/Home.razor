@page "/"
@using Microsoft.AspNetCore.Components

<PageTitle>Home</PageTitle>

<div class="button-container">
    <Button Class="btn btn-primary btn-lg" @onclick="NavigateSlab">Slab Assembly</Button>
    <Button Class="btn btn-success btn-lg" @onclick="NavigateDoor">Door Assembly</Button>
    <Button Class="btn btn-danger btn-lg" @onclick="NavigateFrame">Frame Assembly</Button>
    <Button Class="btn btn-warning btn-lg" @onclick="NavigateFinal">Final Assembly</Button>
</div>

@code {
    [Inject] NavigationManager Navigation { get; set; }

    private const int DelayTime = 10000; // Wait time variable in ms - 10 seconds

    private string BasePath => Navigation.BaseUri.Contains("/FactoryKPIs") ? "/FactoryKPIs" : string.Empty;

    private async Task NavigateSlab()
    {
        Navigation.NavigateTo($"{BasePath}/barchart");
        await Task.Delay(DelayTime); // Wait
        Navigation.NavigateTo($"{BasePath}/piechart");
        await Task.Delay(DelayTime); // Wait
        Navigation.NavigateTo($"{BasePath}/radarchart");
    }

    private async Task NavigateDoor()
    {
        Navigation.NavigateTo($"{BasePath}/linechart");
        await Task.Delay(DelayTime); // Wait
        Navigation.NavigateTo($"{BasePath}/polarchart");
        await Task.Delay(DelayTime); // Wait
        Navigation.NavigateTo($"{BasePath}/piechart");
    }

    private async Task NavigateFrame()
    {
        Navigation.NavigateTo($"{BasePath}/polarchart");
        await Task.Delay(DelayTime); // Wait
        Navigation.NavigateTo($"{BasePath}/barchart");
        await Task.Delay(DelayTime); // Wait
        Navigation.NavigateTo($"{BasePath}/linechart");
    }

    private async Task NavigateFinal()
    {
        Navigation.NavigateTo($"{BasePath}/radarchart");
        await Task.Delay(DelayTime); // Wait
        Navigation.NavigateTo($"{BasePath}/linechart");
        await Task.Delay(DelayTime); // Wait
        Navigation.NavigateTo($"{BasePath}/polarchart");
    }
}